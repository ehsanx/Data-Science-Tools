Traceback (most recent call last):
  File "C:\Users\Ehsan\AppData\Local\Programs\Python\Python311\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\Ehsan\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 1304, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Ehsan\AppData\Local\Programs\Python\Python311\Lib\site-packages\jupyter_core\utils\__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Ehsan\AppData\Local\Programs\Python\Python311\Lib\asyncio\base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\Ehsan\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\Ehsan\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 1020, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Ehsan\AppData\Local\Programs\Python\Python311\Lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import altair as alt
import pandas as pd
import numpy as np
import warnings
warnings.filterwarnings('ignore')

ObsData = pd.read_csv("https://hbiostat.org/data/repo/rhc.csv").iloc[:,1:]

# Creating length of stay
ObsData['Y'] = ObsData['dschdte'] - ObsData['sadmdte']

# Replace the missing values in 'Y' with the difference between 'dthdte' and 'sadmdte'
ObsData.loc[ObsData['Y'].isna(), 'Y'] = ObsData['dthdte'][ObsData['Y'].isna()] - ObsData['sadmdte'][ObsData['Y'].isna()]

# List of columns to convert to categorical
factors = ["cat1", "ca", "cardiohx", "chfhx", "dementhx", "psychhx",
           "chrpulhx", "renalhx", "liverhx", "gibledhx", "malighx",
           "immunhx", "transhx", "amihx", "sex", "dnr1", "ninsclas",
           "resp", "card", "neuro", "gastr", "renal", "meta", "hema",
           "seps", "trauma", "ortho", "race", "income"]

# Convert specified columns to category dtype
ObsData[factors] = ObsData[factors].astype('category')

# Convert RHC usage (swang1) to a binary variable
ObsData['A'] = np.where(ObsData['swang1'] == 'RHC', 1, 0)

# Drop unwanted columns
ObsData = ObsData.drop(columns=['dthdte', 'lstctdte', 'dschdte', 'death', 't3d30', 'dth30', 'surv2md1', 'sadmdte', 'ptid', 'adld3p', 'urin1', 'cat2', 'swang1'])

# Set the order of categories for 'race'
ObsData['race'] = pd.Categorical(ObsData['race'], categories=['white', 'black', 'other'], ordered=False)

# Convert 'sex' to a categorical type and set reference level
ObsData['sex'] = pd.Categorical(ObsData['sex'], categories=['Male', 'Female'], ordered=False)

# Convert 'cat1' to a categorical type and set new levels
ObsData['cat1'] = ObsData['cat1'].replace({
    "Cirrhosis": "Other", "Colon Cancer": "Other", "Coma": "Other",
    "COPD": "Other", "Lung Cancer": "Other", "MOSF w/Malignancy": "MOSF", "MOSF w/Sepsis": "MOSF"
}).astype('category')

# Convert 'ca' to a categorical type and set new levels
ObsData['ca'] = ObsData['ca'].replace({"No": "None", "Yes": "Localized (Yes)"}).astype('category')

# Renaming the columns
ObsData.columns = ["Disease category", "Cancer", "Cardiovascular",
                   "Congestive HF", "Dementia", "Psychiatric", "Pulmonary",
                   "Renal", "Hepatic", "GI Bleed", "Tumor",
                   "Immunosuppression", "Transfer hx", "MI", "age", "sex",
                   "edu", "DASIndex", "APACHE score", "Glasgow Coma Score",
                   "blood pressure", "WBC", "Heart rate", "Respiratory rate",
                   "Temperature", "PaO2vs FIO2", "Albumin", "Hematocrit",
                   "Bilirubin", "Creatinine", "Sodium", "Potassium", "PaCo2",
                   "PH", "Weight", "DNR status", "Medical insurance",
                   "Respiratory Diag", "Cardiovascular Diag",
                   "Neurological Diag", "GastrointestinalDiag", "Renal Diag",
                   "Metabolic Diag", "Hematologic Diag", "Sepsis Diag",
                   "Trauma Diag", "Orthopedic Diag", "race", "income",
                   "Y", "A"]
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [1;32mIn[1], line 1[0m
[1;32m----> 1[0m [38;5;28;01mimport[39;00m [38;5;21;01maltair[39;00m [38;5;28;01mas[39;00m [38;5;21;01malt[39;00m
[0;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mpandas[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpd[39;00m
[0;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m

[1;31mModuleNotFoundError[0m: No module named 'altair'
ModuleNotFoundError: No module named 'altair'

